package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import dao.mappers.IMapResultSetIntoEntity;
import dao.repositories.IDoctorRepository;
import dao.uow.IUnitOfWork;
import domain.model.Doctor;


public class  DoctorRepository extends RepositoryBase <Doctor> implements IDoctorRepository {
	
	private PreparedStatement getPosition;
	private PreparedStatement getPerson;
	
	public DoctorRepository(Connection connection,
			IMapResultSetIntoEntity <Doctor> mapper, IUnitOfWork uow) {
		super(connection,mapper, uow);
		try {
			getPosition = connection.prepareStatement(getPositionSql());
			getPerson = connection.prepareStatement(getPositionSql());

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}


	@Override
	protected String createTableSql() {
		return "" + "CREATE TABLE doctor("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
				+ "position varchar(20)," + "statusDoctor varchar (4),"
				+ "PERSON_ID int"
				+ "FOREIGN KEY (PERSON_ID) REFERENCES person(id),"
				+")";
	}

	@Override
	protected String tableName() {
		return "doctor";
	}

	@Override
	protected String insertSql() {
		// TODO Auto-generated method stub
		return "INSERT INTO doctor (position, statusDoctor, PERSON_ID) VALUES (?,?,?)";
	}

	@Override
	protected String updateSql() {
		// TODO Auto-generated method stub
		return "UPDATE doctor SET (position, statusDoctor, PERSON_ID)=(?,?,?) where id=?";
	}
	
	@Override
	protected String deleteSql() {	
		// TODO Auto-generated method stub
		return "DELETE FROM doctor WHERE id=?";
	}
	
	@Override
	protected String selectAllSql() {
		// TODO Auto-generated method stub
		return "SELECT * FROM doctor";
	}

	@Override
	protected void setUpdate(Doctor entity) throws SQLException {
		// TODO Auto-generated method stub
		update.setString(1, entity.getPosition());
		update.setString(2, entity.getStatusDoctor().toString());
		update.setInt(3, entity.getPerson().getId());
		
	}

	@Override
	protected void setInsert(Doctor entity) throws SQLException {
		// TODO Auto-generated method stub
		insert.setString(1, entity.getPosition());
		insert.setString(2, entity.getStatusDoctor().toString());
		insert.setInt(3, entity.getPerson().getId());
		
	}
	
	private String getPositionSql() {
		// TODO Auto-generated method stub
		return "SELECT * FROM doctor where position = ?";
	}
	
	private String getPersonSql() {
		// TODO Auto-generated method stub
		return "SELECT * FROM doctor where PERSON_ID = ?";
	}



	public List<Doctor> withPosition(String position) {
		// TODO Auto-generated method stub
		List<Doctor> doctor = new ArrayList<Doctor>();
		try{
		getPosition.setString(1,position);
		ResultSet resultSet = getPosition.executeQuery();
		while(resultSet.next()){
		doctor.add(mapper.map(resultSet));
		}
		}
		catch (SQLException e)
		{
		e.printStackTrace();
		}
		return doctor;
	}


	@Override
	public List<Doctor> withPerson(String person) {
		// TODO Auto-generated method stub
		List<Doctor> doctor = new ArrayList<Doctor>();
		try{
		getPerson.setString(1,person);
		ResultSet resultSet = getPerson.executeQuery();
		while(resultSet.next()){
		doctor.add(mapper.map(resultSet));
		}
		}
		catch (SQLException e)
		{
		e.printStackTrace();
		}
		return doctor;
	}
	
	
}
