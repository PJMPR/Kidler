package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import dao.mappers.IMapResultSetIntoEntity;
import dao.repositories.IOperationRepository;
import dao.uow.IUnitOfWork;
import domain.model.Operation;

public class OperationRepository extends RepositoryBase <Operation> implements IOperationRepository {
	
	private PreparedStatement getOperationHall;
	private PreparedStatement getPatientCardId;
	
	public OperationRepository(Connection connection,
			IMapResultSetIntoEntity <Operation> mapper, IUnitOfWork uow) {
		super(connection,mapper, uow);
		try {
			getOperationHall = connection.prepareStatement(getOperationHall());
			getPatientCardId = connection.prepareStatement(getPatientCardId());

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	


	@Override
	protected String createTableSql() {
		return "" + "CREATE TABLE operation("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
				+ "operationHall int," + "supply char(250)"
				+ "patientCardId bigint," + "doctor1Id bigint,"
				+ "doctor2Id bigint," + "doctor3Id bigint,"
				+")";
	}

	@Override
	protected String tableName() {
		return "operation";
	}


	@Override
	protected String insertSql() {
		// TODO Auto-generated method stub
		return "INSERT INTO operation (operationHall, supply, patientCardId, doctor1Id, doctor2Id, doctor3Id) VALUES (?,?,?,?,?,?)";
	}


	@Override
	protected String updateSql() {
		// TODO Auto-generated method stub
		return "UPDATE operation SET (operationHall, supply, patientCardId, doctor1Id, doctor2Id, doctor3Id)=(?,?,?,?,?,?) where id=?";
	}


	@Override
	protected void setUpdate(Operation entity) throws SQLException {
		// TODO Auto-generated method stub
		update.setInt(1, entity.getOperationHall());
		update.setString(2, entity.getSupply());
		update.setInt(3, entity.getPatientCardId());
		update.setInt(4, entity.getDoctor1Id());
		update.setInt(5, entity.getDoctor2Id());
		update.setInt(6, entity.getDoctor3Id());
		
	}


	@Override
	protected void setInsert(Operation entity) throws SQLException {
		// TODO Auto-generated method stub
		insert.setInt(1, entity.getOperationHall());
		insert.setString(2, entity.getSupply());
		insert.setInt(3, entity.getPatientCardId());
		insert.setInt(4, entity.getDoctor1Id());
		insert.setInt(5, entity.getDoctor2Id());
		insert.setInt(6, entity.getDoctor3Id());
		
	}
	
	private String getPatientCardId() {
		// TODO Auto-generated method stub
		return "SELECT * FROM operation where operationHall = ?";
	}


	private String getOperationHall() {
		// TODO Auto-generated method stub
		return "SELECT * FROM operation where patientCardId = ?";
	}



	public List<Operation> fromOperationHall(int operationHall) {
		// TODO Auto-generated method stub
		List<Operation> operation = new ArrayList<Operation>();
		try{
		getOperationHall.setInt(1,operationHall);
		ResultSet resultSet = getOperationHall.executeQuery();
		while(resultSet.next()){
			operation.add(mapper.map(resultSet));
		}
		}
		catch (SQLException e)
		{
		e.printStackTrace();
		}
		return operation;
	}



	public List<Operation> fromPatientCardId(int patientCardId) {
		// TODO Auto-generated method stub
		List<Operation> operation = new ArrayList<Operation>();
		try{
		getPatientCardId.setInt(1,patientCardId);
		ResultSet resultSet = getPatientCardId.executeQuery();
		while(resultSet.next()){
			operation.add(mapper.map(resultSet));
		}
		}
		catch (SQLException e)
		{
		e.printStackTrace();
		}
		return operation;
	}

	
	
}

