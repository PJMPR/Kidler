package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import dao.mappers.IMapResultSetIntoEntity;
import dao.repositories.IPersonRepository;
import dao.uow.IUnitOfWork;
import domain.model.Person;

public class PersonRepository extends RepositoryBase <Person> implements IPersonRepository {
	
	private PreparedStatement getName;
	private PreparedStatement getSurname;
	
	public PersonRepository(Connection connection,
			IMapResultSetIntoEntity <Person> mapper, IUnitOfWork uow) {
		super(connection,mapper, uow);
		try {
			getName = connection.prepareStatement(getNameSql());
			getSurname = connection.prepareStatement(getSurnameSql());

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}


	@Override
	protected String createTableSql() {
		return "" + "CREATE TABLE patientCard("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
				+ "name varchar(20)," + "surname varchar(20)"  
				+ "birthDate DATE," + "personalIdentityNumber varchar(15),"
				+ "phoneNumber varchar(20)," + "email varchar (30),"
				+")";
	}

	@Override
	protected String tableName() {
		return "patientCard";
	}

	@Override
	protected String insertSql() {
		// TODO Auto-generated method stub
		return "INSERT INTO patientCard (name, surname, birthDate, personalIdentityNumber, phoneNumber, email) VALUES (?,?,?,?,?,?,)";
	}

	@Override
	protected String updateSql() {
		// TODO Auto-generated method stub
		return "UPDATE patientCard SET (name, surname, birthDate, personalIdentityNumber, phoneNumber, email)=(?,?,?,?,?,?) where id=?";
	}

	@Override
	protected void setUpdate(Person entity) throws SQLException {
		// TODO Auto-generated method stub
		update.setString(1, entity.getName());
		update.setString(2, entity.getSurname());
		update.setString(3, entity.getBirthDate());
		update.setString(4, entity.getPersonalIdentityNumber());
		update.setString(5, entity.getPhoneNumber());
		update.setString(6, entity.getEmail());

		
	}

	@Override
	protected void setInsert(Person entity) throws SQLException {
		// TODO Auto-generated method stub
		insert.setString(1, entity.getName());
		insert.setString(2, entity.getSurname());
		insert.setString(3, entity.getBirthDate());
		insert.setString(4, entity.getPersonalIdentityNumber());
		insert.setString(5, entity.getPhoneNumber());
		insert.setString(6, entity.getEmail());
		
	}

	private String getSurnameSql() {
		// TODO Auto-generated method stub
		return "SELECT * FROM patientCard where surname = ?";
	}


	private String getNameSql() {
		// TODO Auto-generated method stub
		return "SELECT * FROM patientCard where name = ?";
	}


	public List<Person> fromName(String name) {
		// TODO Auto-generated method stub
		List<Person> person = new ArrayList<Person>();
		try{
		getName.setString(1,name);
		ResultSet resultSet = getName.executeQuery();
		while(resultSet.next()){
			person.add(mapper.map(resultSet));
		}
		}
		catch (SQLException e)
		{
		e.printStackTrace();
		}
		return person;
	}


	public List<Person> fromSurname(String surname) {
		// TODO Auto-generated method stub
		List<Person> person = new ArrayList<Person>();
		try{
		getSurname.setString(1,surname);
		ResultSet resultSet = getSurname.executeQuery();
		while(resultSet.next()){
			person.add(mapper.map(resultSet));
		}
		}
		catch (SQLException e)
		{
		e.printStackTrace();
		}
		return person;
	}
	
}

